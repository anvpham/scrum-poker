version: 2.1
jobs:
  unit-test:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
        user: root
    steps:
      - checkout
      - run:
          name: Run unit tests
          working_directory: ~/project/backend/tests/UnitTests
          command: dotnet test

  integration-test:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
        user: root
    steps:
      - checkout
      - run:
          name: Run integration tests
          working_directory: ~/project/backend/tests/IntegrationTests
          command: dotnet test

  build:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
        user: root
    steps:
      - checkout
      - run:
          name: Build
          working_directory: ~/project/backend/scrum-poker-server
          command: dotnet build

  plan-apply:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            terraform init -input=false
            terraform plan -out tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .

  plan-destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform create destroy plan
          command: |
            terraform plan -destroy -out tfdestroy -var-file terraform.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .

  destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: |
            terraform apply -auto-approve tfdestroy


workflows:
  build-and-test:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - unit-test:
          filters:
            branches:
              only: master
          requires:
            - build
      - integration-test:
          filters:
            branches:
              only: master
          requires:
            - build
      - plan-apply:
          filters:
            branches:
              only: master
          requires:
            - build
            - unit-test
            - integration-test
      - apply:
          requires:
            - plan-apply
      - plan-destroy:
          requires:
            - apply
      - destroy:
          requires:
            - plan-destroy
